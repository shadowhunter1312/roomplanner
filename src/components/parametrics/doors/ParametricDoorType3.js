import { ParametricBaseDoor, DOOR_OPEN_DIRECTIONS } from "./ParametricBaseDoor";
import { Vector3 } from "three";

export class ParametricDoorType3 extends ParametricBaseDoor {
    constructor(parameters) {
        super(parameters);
        this.__doorType = 3;
    }

    /**
     * Based on the DoorType the below method will change
     * This can be replaced by the appropriate door model class
     * This method will change with logic based on the door model type
     */
    __createForDoorModel(frameWidth, openingDirection) {

        let gap = 0.25; //0.002;
        let sf = this.__frameSize;
        let wf = frameWidth - (sf * 2) - (gap * 2);
        let hf = (this.__frameHeight / 2) - (gap * 2);
        let deep = (this.__frameThickness * 0.5);

        let side = 0,
            minx = 0,
            maxx = 0;
        // # Open to right or left
        if (openingDirection === DOOR_OPEN_DIRECTIONS.RIGHT) {
            side = 1;
            minx = wf * -1;
            maxx = 0.0;
        } else {
            side = -1;
            minx = 0.0;
            maxx = wf;
        }
        let miny = 0.0; //# locked
        let maxy = deep;
        let minz = -hf;
        let maxz = hf - sf - gap;

        let vertices = [
            new Vector3(minx, (-1.5599653124809265e-08 * 100), maxz),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), maxz),
            new Vector3(minx, maxy, maxz),
            new Vector3(maxx, maxy, maxz),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), maxz),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), maxz),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, maxz),
            new Vector3(minx, (-1.5628756955266e-08 * 100), maxz - (0.5012519359588623 * 100)),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), maxz - (0.5012525320053101 * 100)),
            new Vector3(minx, maxy, maxz - (0.5012519359588623 * 100)),
            new Vector3(maxx, maxy, maxz - (0.5012525320053101 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.501252293586731 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.5012521147727966 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, maxz - (0.5012521147727966 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, maxz - (0.501252293586731 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), (-1.5832483768463135e-08 * 100), maxz),
            new Vector3(maxx - (0.11909729242324829 * 100), (-1.5832483768463135e-08 * 100), maxz),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, maxz),
            new Vector3(minx + (0.11909735202789307 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.5012521743774414 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.5012522339820862 * 100)),
            new Vector3(minx, (-1.5629622041046787e-08 * 100), maxz - (0.516154021024704 * 100)),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), maxz - (0.5161546468734741 * 100)),
            new Vector3(minx, maxy, maxz - (0.516154021024704 * 100)),
            new Vector3(maxx, maxy, maxz - (0.5161546468734741 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.516154408454895 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.5161541998386383 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, maxz - (0.516154408454895 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.5161543190479279 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.5161542594432831 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, maxz - (0.5161542594432831 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), maxz),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), maxz),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), maxz - (0.501252293586731 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), maxz - (0.5012521147727966 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), maxz),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), maxz),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), maxz - (0.5012521743774414 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), maxz - (0.5012522339820862 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), maxz - (0.516154408454895 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), maxz - (0.5161541998386383 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), maxz - (0.5161543190479279 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), maxz - (0.5161542594432831 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.992994874715805 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.9929947257041931 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, maxz - (0.9929947257041931 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy, maxz - (0.992994874715805 * 100)),
            new Vector3(minx, (-1.565730833874568e-08 * 100), maxz - (0.9929942488670349 * 100)),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), maxz - (0.9929954260587692 * 100)),
            new Vector3(minx, maxy, maxz - (0.9929942488670349 * 100)),
            new Vector3(maxx, maxy, maxz - (0.9929954260587692 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.9929950088262558 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), maxz - (0.9929945915937424 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, maxz - (0.9929950088262558 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), maxz - (0.9929950088262558 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), maxz - (0.9929945915937424 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), maxz - (0.992994874715805 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), maxz - (0.9929947257041931 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), maxy - (0.0004077646881341934 * 100), maxz - (0.992994874715805 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.0004077646881341934 * 100), maxz - (0.9929950088262558 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, maxz),
            new Vector3(maxx - (0.11909729242324829 * 100), maxy, maxz),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy, maxz - (0.5012522339820862 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, maxz - (0.5012521743774414 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, maxz - (0.5161541998386383 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy, maxz - (0.5161543190479279 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, maxz - (0.9929945915937424 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), maxz),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), maxz),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.5012521147727966 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.501252293586731 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), maxz),
            new Vector3(maxx - (0.11909729242324829 * 100), maxy - (0.008999999612569809 * 100), maxz),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.5012522339820862 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.5012521743774414 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.5161541998386383 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.516154408454895 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.5161542594432831 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.5161543190479279 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.9929947257041931 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.992994874715805 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.9929945915937424 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), maxz - (0.9929950088262558 * 100)),
            new Vector3(minx, (-1.5599653124809265e-08 * 100), minz),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), minz),
            new Vector3(minx, maxy, minz),
            new Vector3(maxx, maxy, minz),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), minz),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), minz),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, minz),
            new Vector3(minx, (-1.5628756955266e-08 * 100), minz + (0.5012519359588623 * 100)),
            new Vector3(minx, (-1.5657860785722733e-08 * 100), minz + (1.0025038719177246 * 100)),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), minz + (0.5012525320053101 * 100)),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), minz + (1.0025050640106201 * 100)),
            new Vector3(minx, maxy, minz + (0.5012519359588623 * 100)),
            new Vector3(minx, maxy, minz + (1.0025038719177246 * 100)),
            new Vector3(maxx, maxy, minz + (0.5012525320053101 * 100)),
            new Vector3(maxx, maxy, minz + (1.0025050640106201 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), minz + (0.501252293586731 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), minz + (1.0025046467781067 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), minz + (0.5012521147727966 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), minz + (1.0025042295455933 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, minz + (0.5012521147727966 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, minz + (1.0025042295455933 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, minz + (0.501252293586731 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, minz + (1.0025046467781067 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), (-1.5832483768463135e-08 * 100), minz),
            new Vector3(maxx - (0.11909729242324829 * 100), (-1.5832483768463135e-08 * 100), minz),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, minz),
            new Vector3(minx + (0.11909735202789307 * 100), (-1.5832483768463135e-08 * 100), minz + (0.5012521743774414 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), (-1.5832483768463135e-08 * 100), minz + (0.5012522339820862 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, minz + (1.0025043686230788 * 100)),
            new Vector3(minx, (-1.5629622041046787e-08 * 100), minz + (0.516154021024704 * 100)),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), minz + (0.5161546468734741 * 100)),
            new Vector3(minx, maxy, minz + (0.516154021024704 * 100)),
            new Vector3(maxx, maxy, minz + (0.5161546468734741 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), minz + (0.516154408454895 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), minz + (0.5161541998386383 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, minz + (0.516154408454895 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), (-1.5832483768463135e-08 * 100), minz + (0.5161543190479279 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), (-1.5832483768463135e-08 * 100), minz + (0.5161542594432831 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, minz + (0.5161542594432831 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), minz),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), minz),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), minz + (0.501252293586731 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), minz + (1.0025046467781067 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), minz + (0.5012521147727966 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), minz + (1.0025042295455933 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), minz),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), minz),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), minz + (0.5012521743774414 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), minz + (0.5012522339820862 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), minz + (0.516154408454895 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), minz + (0.5161541998386383 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), minz + (0.5161543190479279 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), minz + (0.5161542594432831 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), (-1.5832483768463135e-08 * 100), minz + (0.992994874715805 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), (-1.5832483768463135e-08 * 100), minz + (0.9929947257041931 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, minz + (0.9929947257041931 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy, minz + (0.992994874715805 * 100)),
            new Vector3(minx, (-1.565730833874568e-08 * 100), minz + (0.9929942488670349 * 100)),
            new Vector3(maxx, (-1.5599653124809265e-08 * 100), minz + (0.9929954260587692 * 100)),
            new Vector3(minx, maxy, minz + (0.9929942488670349 * 100)),
            new Vector3(maxx, maxy, minz + (0.9929954260587692 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), (-1.5832483768463135e-08 * 100), minz + (0.9929950088262558 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), (-1.5832483768463135e-08 * 100), minz + (0.9929945915937424 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, minz + (0.9929950088262558 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), miny + (0.009999999776482582 * 100), minz + (0.9929950088262558 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), miny + (0.009999999776482582 * 100), minz + (0.9929945915937424 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), minz + (1.0025043686231356 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), minz + (1.0025045077006212 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.0004077646881341934 * 100), minz + (1.0025046467781067 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), maxy - (0.0004077646881341934 * 100), minz + (1.0025045077006212 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), miny + (0.009999999776482582 * 100), minz + (0.992994874715805 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), miny + (0.009999999776482582 * 100), minz + (0.9929947257041931 * 100)),
            new Vector3(maxx - (0.11909729242324829 * 100), maxy - (0.0004077646881341934 * 100), minz + (0.992994874715805 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.0004077646881341934 * 100), minz + (0.9929950088262558 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy, minz),
            new Vector3(maxx - (0.11909729242324829 * 100), maxy, minz),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy, minz + (0.5012522339820862 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy, minz + (0.5012521743774414 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy, minz + (1.0025045077005643 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, minz + (0.5161541998386383 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy, minz + (0.5161543190479279 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy, minz + (0.9929945915937424 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), minz),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), minz),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), minz + (0.5012521147727966 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), minz + (1.0025042295455933 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), minz + (0.501252293586731 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), minz + (1.0025046467781067 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), minz),
            new Vector3(maxx - (0.11909729242324829 * 100), maxy - (0.008999999612569809 * 100), minz),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy - (0.008999999612569809 * 100), minz + (0.5012522339820862 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), minz + (0.5012521743774414 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy - (0.008999999612569809 * 100), minz + (1.0025045077005643 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), minz + (1.0025043686230788 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), minz + (0.5161541998386383 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), minz + (0.516154408454895 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), minz + (0.5161542594432831 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy - (0.008999999612569809 * 100), minz + (0.5161543190479279 * 100)),
            new Vector3(minx + (0.11909735202789307 * 100), maxy - (0.008999999612569809 * 100), minz + (0.9929947257041931 * 100)),
            new Vector3(maxx - (0.11909738183021545 * 100), maxy - (0.008999999612569809 * 100), minz + (0.992994874715805 * 100)),
            new Vector3(minx + (0.10429966449737549 * 100), maxy - (0.008999999612569809 * 100), minz + (0.9929945915937424 * 100)),
            new Vector3(maxx - (0.10429960489273071 * 100), maxy - (0.008999999612569809 * 100), minz + (0.9929950088262558 * 100))
        ];
        let faceids = [5, 0, 2, 6, 5, 2, 8, 1, 3, 10, 8, 3, 92, 47, 49, 96, 92, 49, 9, 2, 0, 7, 9, 0, 94, 48, 46, 90, 94, 46, 7, 0, 5, 12, 7, 5, 90, 46, 51, 100, 90, 51, 96, 49, 52, 104, 96, 52, 11, 4, 1, 8, 11, 1, 98, 50, 47, 92, 98, 47, 39, 25, 12, 33, 39, 12, 13, 6, 2, 9, 13, 2, 33, 12, 5, 31, 33, 5, 18, 15, 16, 19, 18, 16, 34, 15, 18, 36, 34, 18, 21, 8, 10, 23, 21, 10, 22, 9, 7, 20, 22, 7, 20, 7, 12, 25, 20, 12, 23, 10, 14, 26, 23, 14, 24, 11, 8, 21, 24, 8, 126, 100, 51, 54, 126, 51, 32, 11, 24, 38, 32, 24, 37, 19, 16, 35, 37, 16, 33, 31, 34, 36, 33, 34, 37, 35, 30, 32, 37, 30, 39, 33, 36, 41, 39, 36, 40, 37, 32, 38, 40, 32, 41, 36, 37, 40, 41, 37, 36, 18, 19, 37, 36, 19, 40, 27, 28, 41, 40, 28, 48, 22, 20, 46, 48, 20, 30, 4, 11, 32, 30, 11, 47, 21, 23, 49, 47, 23, 38, 24, 50, 53, 38, 50, 46, 20, 25, 51, 46, 25, 49, 23, 26, 52, 49, 26, 50, 24, 21, 47, 50, 21, 43, 28, 27, 42, 43, 27, 54, 51, 25, 39, 54, 25, 53, 50, 98, 124, 53, 98, 148, 56, 55, 149, 148, 55, 56, 148, 126, 54, 56, 126, 56, 43, 42, 55, 56, 42, 55, 53, 124, 149, 55, 124, 71, 60, 61, 72, 71, 61, 66, 30, 35, 71, 66, 35, 70, 34, 31, 67, 70, 31, 69, 66, 71, 72, 69, 71, 169, 81, 79, 174, 169, 79, 73, 70, 67, 68, 73, 67, 175, 78, 80, 167, 175, 80, 174, 79, 78, 175, 174, 78, 75, 69, 72, 77, 75, 72, 76, 73, 68, 74, 76, 68, 77, 72, 73, 76, 77, 73, 81, 75, 77, 79, 81, 77, 78, 76, 74, 80, 78, 74, 72, 61, 62, 73, 72, 62, 74, 63, 65, 80, 74, 65, 1, 4, 59, 3, 1, 59, 10, 3, 59, 14, 10, 59, 102, 65, 48, 94, 102, 48, 16, 15, 17, 60, 16, 17, 61, 60, 17, 62, 61, 17, 63, 13, 9, 22, 63, 9, 41, 28, 43, 56, 41, 43, 55, 42, 27, 40, 55, 27, 65, 63, 22, 48, 65, 22, 45, 64, 29, 44, 45, 29, 54, 39, 41, 56, 54, 41, 55, 40, 38, 53, 55, 38, 78, 44, 29, 76, 78, 29, 68, 13, 63, 74, 68, 63, 73, 62, 17, 70, 73, 17, 169, 104, 52, 81, 169, 52, 76, 29, 64, 77, 76, 64, 67, 6, 13, 68, 67, 13, 69, 14, 59, 66, 69, 59, 79, 45, 44, 78, 79, 44, 77, 64, 45, 79, 77, 45, 75, 26, 14, 69, 75, 14, 81, 52, 26, 75, 81, 26, 80, 65, 102, 167, 80, 102, 87, 88, 84, 82, 87, 84, 91, 95, 85, 83, 91, 85, 92, 96, 142, 140, 92, 142, 93, 89, 82, 84, 93, 82, 94, 90, 139, 141, 94, 139, 89, 99, 87, 82, 89, 87, 90, 100, 144, 139, 90, 144, 96, 104, 145, 142, 96, 145, 97, 91, 83, 86, 97, 83, 98, 92, 140, 143, 98, 140, 132, 125, 99, 116, 132, 99, 101, 93, 84, 88, 101, 84, 125, 122, 87, 99, 125, 87, 108, 109, 106, 105, 108, 106, 127, 129, 108, 105, 127, 108, 112, 114, 95, 91, 112, 95, 113, 111, 89, 93, 113, 89, 111, 116, 99, 89, 111, 99, 114, 117, 103, 95, 114, 103, 115, 112, 91, 97, 115, 91, 126, 147, 144, 100, 126, 144, 123, 131, 115, 97, 123, 115, 130, 128, 106, 109, 130, 106, 125, 129, 127, 122, 125, 127, 130, 123, 121, 128, 130, 121, 132, 134, 129, 125, 132, 129, 133, 131, 123, 130, 133, 123, 134, 133, 130, 129, 134, 130, 129, 130, 109, 108, 129, 109, 133, 134, 119, 118, 133, 119, 141, 139, 111, 113, 141, 111, 121, 123, 97, 86, 121, 97, 140, 142, 114, 112, 140, 114, 131, 146, 143, 115, 131, 143, 139, 144, 116, 111, 139, 116, 142, 145, 117, 114, 142, 117, 143, 140, 112, 115, 143, 112, 136, 135, 118, 119, 136, 118, 147, 132, 116, 144, 147, 116, 146, 124, 98, 143, 146, 98, 148, 149, 152, 153, 148, 152, 153, 147, 126, 148, 153, 126, 153, 152, 135, 136, 153, 135, 152, 149, 124, 146, 152, 124, 171, 172, 158, 157, 171, 158, 164, 171, 128, 121, 164, 128, 170, 165, 122, 127, 170, 122, 168, 172, 171, 164, 168, 171, 169, 174, 181, 183, 169, 181, 173, 166, 165, 170, 173, 165, 175, 167, 182, 180, 175, 182, 174, 175, 180, 181, 174, 180, 177, 179, 172, 168, 177, 172, 178, 176, 166, 173, 178, 166, 179, 178, 173, 172, 179, 173, 183, 181, 179, 177, 183, 179, 180, 182, 176, 178, 180, 176, 172, 173, 159, 158, 172, 159, 176, 182, 163, 161, 176, 163, 83, 85, 156, 86, 83, 156, 95, 103, 156, 85, 95, 156, 102, 94, 141, 163, 102, 141, 106, 157, 107, 105, 106, 107, 158, 159, 107, 157, 158, 107, 161, 113, 93, 101, 161, 93, 134, 153, 136, 119, 134, 136, 152, 133, 118, 135, 152, 118, 163, 141, 113, 161, 163, 113, 138, 137, 120, 162, 138, 120, 147, 153, 134, 132, 147, 134, 152, 146, 131, 133, 152, 131, 180, 178, 120, 137, 180, 120, 166, 176, 161, 101, 166, 161, 173, 170, 107, 159, 173, 107, 169, 183, 145, 104, 169, 145, 178, 179, 162, 120, 178, 162, 165, 166, 101, 88, 165, 101, 175, 174, 160, 110, 175, 160, 168, 164, 156, 103, 168, 156, 181, 180, 137, 138, 181, 137, 179, 181, 138, 162, 179, 138, 177, 168, 103, 117, 177, 103, 183, 177, 117, 145, 183, 117, 182, 167, 102, 163, 182, 102];
        let myfaces = this.__convertFrom4ToFace3(faceids, vertices, 0);
        let o = { vertices: vertices, faces: myfaces, widthFactor: wf, depth: deep, side: side };
        console.log('RETURN o ', o);
        return o;
    }
}
 // let myfaces = [new Face3(5, 0, 2), new Face3(6, 5, 2), new Face3(8, 1, 3), new Face3(10, 8, 3), new Face3(92, 47, 49), new Face3(96, 92, 49), new Face3(9, 2, 0), new Face3(7, 9, 0), new Face3(94, 48, 46), new Face3(90, 94, 46), new Face3(7, 0, 5), new Face3(12, 7, 5), new Face3(90, 46, 51), new Face3(100, 90, 51), new Face3(96, 49, 52), new Face3(104, 96, 52), new Face3(11, 4, 1), new Face3(8, 11, 1), new Face3(98, 50, 47), new Face3(92, 98, 47), new Face3(39, 25, 12), new Face3(33, 39, 12), new Face3(13, 6, 2), new Face3(9, 13, 2), new Face3(33, 12, 5), new Face3(31, 33, 5), new Face3(18, 15, 16), new Face3(19, 18, 16), new Face3(34, 15, 18), new Face3(36, 34, 18), new Face3(21, 8, 10), new Face3(23, 21, 10), new Face3(22, 9, 7), new Face3(20, 22, 7), new Face3(20, 7, 12), new Face3(25, 20, 12), new Face3(23, 10, 14), new Face3(26, 23, 14), new Face3(24, 11, 8), new Face3(21, 24, 8), new Face3(126, 100, 51), new Face3(54, 126, 51), new Face3(32, 11, 24), new Face3(38, 32, 24), new Face3(37, 19, 16), new Face3(35, 37, 16), new Face3(33, 31, 34), new Face3(36, 33, 34), new Face3(37, 35, 30), new Face3(32, 37, 30), new Face3(39, 33, 36), new Face3(41, 39, 36), new Face3(40, 37, 32), new Face3(38, 40, 32), new Face3(41, 36, 37), new Face3(40, 41, 37), new Face3(36, 18, 19), new Face3(37, 36, 19), new Face3(40, 27, 28), new Face3(41, 40, 28), new Face3(48, 22, 20), new Face3(46, 48, 20), new Face3(30, 4, 11), new Face3(32, 30, 11), new Face3(47, 21, 23), new Face3(49, 47, 23), new Face3(38, 24, 50), new Face3(53, 38, 50), new Face3(46, 20, 25), new Face3(51, 46, 25), new Face3(49, 23, 26), new Face3(52, 49, 26), new Face3(50, 24, 21), new Face3(47, 50, 21), new Face3(43, 28, 27), new Face3(42, 43, 27), new Face3(54, 51, 25), new Face3(39, 54, 25), new Face3(53, 50, 98), new Face3(124, 53, 98), new Face3(148, 56, 55), new Face3(149, 148, 55), new Face3(56, 148, 126), new Face3(54, 56, 126), new Face3(56, 43, 42), new Face3(55, 56, 42), new Face3(55, 53, 124), new Face3(149, 55, 124), new Face3(71, 60, 61), new Face3(72, 71, 61), new Face3(66, 30, 35), new Face3(71, 66, 35), new Face3(70, 34, 31), new Face3(67, 70, 31), new Face3(69, 66, 71), new Face3(72, 69, 71), new Face3(169, 81, 79), new Face3(174, 169, 79), new Face3(73, 70, 67), new Face3(68, 73, 67), new Face3(175, 78, 80), new Face3(167, 175, 80), new Face3(174, 79, 78), new Face3(175, 174, 78), new Face3(75, 69, 72), new Face3(77, 75, 72), new Face3(76, 73, 68), new Face3(74, 76, 68), new Face3(77, 72, 73), new Face3(76, 77, 73), new Face3(81, 75, 77), new Face3(79, 81, 77), new Face3(78, 76, 74), new Face3(80, 78, 74), new Face3(72, 61, 62), new Face3(73, 72, 62), new Face3(74, 63, 65), new Face3(80, 74, 65), new Face3(1, 4, 59), new Face3(3, 1, 59), new Face3(10, 3, 59), new Face3(14, 10, 59), new Face3(102, 65, 48), new Face3(94, 102, 48), new Face3(16, 15, 17), new Face3(60, 16, 17), new Face3(61, 60, 17), new Face3(62, 61, 17), new Face3(63, 13, 9), new Face3(22, 63, 9), new Face3(41, 28, 43), new Face3(56, 41, 43), new Face3(55, 42, 27), new Face3(40, 55, 27), new Face3(65, 63, 22), new Face3(48, 65, 22), new Face3(45, 64, 29), new Face3(44, 45, 29), new Face3(54, 39, 41), new Face3(56, 54, 41), new Face3(55, 40, 38), new Face3(53, 55, 38), new Face3(78, 44, 29), new Face3(76, 78, 29), new Face3(68, 13, 63), new Face3(74, 68, 63), new Face3(73, 62, 17), new Face3(70, 73, 17), new Face3(169, 104, 52), new Face3(81, 169, 52), new Face3(76, 29, 64), new Face3(77, 76, 64), new Face3(67, 6, 13), new Face3(68, 67, 13), new Face3(69, 14, 59), new Face3(66, 69, 59), new Face3(79, 45, 44), new Face3(78, 79, 44), new Face3(77, 64, 45), new Face3(79, 77, 45), new Face3(75, 26, 14), new Face3(69, 75, 14), new Face3(81, 52, 26), new Face3(75, 81, 26), new Face3(80, 65, 102), new Face3(167, 80, 102), new Face3(87, 88, 84), new Face3(82, 87, 84), new Face3(91, 95, 85), new Face3(83, 91, 85), new Face3(92, 96, 142), new Face3(140, 92, 142), new Face3(93, 89, 82), new Face3(84, 93, 82), new Face3(94, 90, 139), new Face3(141, 94, 139), new Face3(89, 99, 87), new Face3(82, 89, 87), new Face3(90, 100, 144), new Face3(139, 90, 144), new Face3(96, 104, 145), new Face3(142, 96, 145), new Face3(97, 91, 83), new Face3(86, 97, 83), new Face3(98, 92, 140), new Face3(143, 98, 140), new Face3(132, 125, 99), new Face3(116, 132, 99), new Face3(101, 93, 84), new Face3(88, 101, 84), new Face3(125, 122, 87), new Face3(99, 125, 87), new Face3(108, 109, 106), new Face3(105, 108, 106), new Face3(127, 129, 108), new Face3(105, 127, 108), new Face3(112, 114, 95), new Face3(91, 112, 95), new Face3(113, 111, 89), new Face3(93, 113, 89), new Face3(111, 116, 99), new Face3(89, 111, 99), new Face3(114, 117, 103), new Face3(95, 114, 103), new Face3(115, 112, 91), new Face3(97, 115, 91), new Face3(126, 147, 144), new Face3(100, 126, 144), new Face3(123, 131, 115), new Face3(97, 123, 115), new Face3(130, 128, 106), new Face3(109, 130, 106), new Face3(125, 129, 127), new Face3(122, 125, 127), new Face3(130, 123, 121), new Face3(128, 130, 121), new Face3(132, 134, 129), new Face3(125, 132, 129), new Face3(133, 131, 123), new Face3(130, 133, 123), new Face3(134, 133, 130), new Face3(129, 134, 130), new Face3(129, 130, 109), new Face3(108, 129, 109), new Face3(133, 134, 119), new Face3(118, 133, 119), new Face3(141, 139, 111), new Face3(113, 141, 111), new Face3(121, 123, 97), new Face3(86, 121, 97), new Face3(140, 142, 114), new Face3(112, 140, 114), new Face3(131, 146, 143), new Face3(115, 131, 143), new Face3(139, 144, 116), new Face3(111, 139, 116), new Face3(142, 145, 117), new Face3(114, 142, 117), new Face3(143, 140, 112), new Face3(115, 143, 112), new Face3(136, 135, 118), new Face3(119, 136, 118), new Face3(147, 132, 116), new Face3(144, 147, 116), new Face3(146, 124, 98), new Face3(143, 146, 98), new Face3(148, 149, 152), new Face3(153, 148, 152), new Face3(153, 147, 126), new Face3(148, 153, 126), new Face3(153, 152, 135), new Face3(136, 153, 135), new Face3(152, 149, 124), new Face3(146, 152, 124), new Face3(171, 172, 158), new Face3(157, 171, 158), new Face3(164, 171, 128), new Face3(121, 164, 128), new Face3(170, 165, 122), new Face3(127, 170, 122), new Face3(168, 172, 171), new Face3(164, 168, 171), new Face3(169, 174, 181), new Face3(183, 169, 181), new Face3(173, 166, 165), new Face3(170, 173, 165), new Face3(175, 167, 182), new Face3(180, 175, 182), new Face3(174, 175, 180), new Face3(181, 174, 180), new Face3(177, 179, 172), new Face3(168, 177, 172), new Face3(178, 176, 166), new Face3(173, 178, 166), new Face3(179, 178, 173), new Face3(172, 179, 173), new Face3(183, 181, 179), new Face3(177, 183, 179), new Face3(180, 182, 176), new Face3(178, 180, 176), new Face3(172, 173, 159), new Face3(158, 172, 159), new Face3(176, 182, 163), new Face3(161, 176, 163), new Face3(83, 85, 156), new Face3(86, 83, 156), new Face3(95, 103, 156), new Face3(85, 95, 156), new Face3(102, 94, 141), new Face3(163, 102, 141), new Face3(106, 157, 107), new Face3(105, 106, 107), new Face3(158, 159, 107), new Face3(157, 158, 107), new Face3(161, 113, 93), new Face3(101, 161, 93), new Face3(134, 153, 136), new Face3(119, 134, 136), new Face3(152, 133, 118), new Face3(135, 152, 118), new Face3(163, 141, 113), new Face3(161, 163, 113), new Face3(138, 137, 120), new Face3(162, 138, 120), new Face3(147, 153, 134), new Face3(132, 147, 134), new Face3(152, 146, 131), new Face3(133, 152, 131), new Face3(180, 178, 120), new Face3(137, 180, 120), new Face3(166, 176, 161), new Face3(101, 166, 161), new Face3(173, 170, 107), new Face3(159, 173, 107), new Face3(169, 183, 145), new Face3(104, 169, 145), new Face3(178, 179, 162), new Face3(120, 178, 162), new Face3(165, 166, 101), new Face3(88, 165, 101), new Face3(175, 174, 160), new Face3(110, 175, 160), new Face3(168, 164, 156), new Face3(103, 168, 156), new Face3(181, 180, 137), new Face3(138, 181, 137), new Face3(179, 181, 138), new Face3(162, 179, 138), new Face3(177, 168, 103), new Face3(117, 177, 103), new Face3(183, 177, 117), new Face3(145, 183, 117), new Face3(182, 167, 102), new Face3(163, 182, 102)];

// let normal_ids = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333];
        // let glass_ids = [];
        // let i = 0;
        // for (i = 0; i < normal_ids.length; i++) { myfaces[normal_ids[i]].materialIndex = this.__doorMaterialId; }
        // for (i = 0; i < glass_ids.length; i++) { myfaces[glass_ids[i]].materialIndex = this.__glassMaterialId; }